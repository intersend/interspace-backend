{
  "summary": {
    "totalSuites": 1,
    "totalTests": 19,
    "passed": 6,
    "failed": 13,
    "skipped": 0,
    "duration": 399,
    "passRate": "31.58",
    "startTime": "2025-06-20T20:25:07.164Z",
    "endTime": "2025-06-20T20:25:07.563Z",
    "environment": "test"
  },
  "suites": [
    {
      "suite": "Authentication V2 - Flat Identity",
      "status": "failed",
      "tests": [
        {
          "name": "POST /auth/authenticate - Wallet auth with automatic profile creation",
          "status": "passed",
          "duration": 160.7540840022266,
          "retries": 0
        },
        {
          "name": "POST /auth/authenticate - Wallet auth with invalid signature",
          "status": "failed",
          "duration": 28.942542001605034,
          "retries": 0,
          "error": {}
        },
        {
          "name": "POST /auth/authenticate - Wallet auth with expired nonce",
          "status": "failed",
          "duration": 0.8024579994380474,
          "retries": 0,
          "error": {}
        },
        {
          "name": "POST /auth/authenticate - Wallet auth with message tampering",
          "status": "passed",
          "duration": 12.187959000468254,
          "retries": 0
        },
        {
          "name": "POST /auth/authenticate - Wallet auth with wrong domain",
          "status": "failed",
          "duration": 21.045125000178814,
          "retries": 0,
          "error": {}
        },
        {
          "name": "POST /auth/authenticate - Wallet auth replay attack prevention",
          "status": "passed",
          "duration": 22.11437499895692,
          "retries": 0
        },
        {
          "name": "POST /auth/authenticate - Email auth with automatic profile creation",
          "status": "failed",
          "duration": 6.377709001302719,
          "retries": 0,
          "error": {
            "name": "ApiError",
            "status": 500,
            "statusText": "Internal Server Error",
            "data": {
              "success": false,
              "error": "emailAuthController.requestCode is not a function",
              "code": "INTERNAL_ERROR",
              "requestId": "req_1750451107415_ach0p1ayr",
              "stack": "TypeError: emailAuthController.requestCode is not a function\n    at /usr/src/app/src/routes/authRoutesV2.js:103:33\n    at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/usr/src/app/node_modules/express/lib/router/route.js:149:13)\n    at middleware (/usr/src/app/node_modules/express-validator/lib/middlewares/check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
            },
            "headers": {
              "cross-origin-opener-policy": "same-origin",
              "cross-origin-resource-policy": "same-origin",
              "origin-agent-cluster": "?1",
              "referrer-policy": "same-origin",
              "x-content-type-options": "nosniff",
              "x-dns-prefetch-control": "off",
              "x-download-options": "noopen",
              "x-frame-options": "DENY",
              "x-xss-protection": "0",
              "permissions-policy": "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()",
              "cache-control": "no-store, no-cache, must-revalidate, proxy-revalidate",
              "pragma": "no-cache",
              "expires": "0",
              "surrogate-control": "no-store",
              "vary": "Origin",
              "access-control-allow-credentials": "true",
              "access-control-expose-headers": "Content-Length,X-Request-ID,X-Rate-Limit-Remaining",
              "x-request-id": "req_1750451107415_ach0p1ayr",
              "x-ratelimit-limit": "5000",
              "x-ratelimit-remaining": "4939",
              "x-ratelimit-reset": "2025-06-20T20:39:55.512Z",
              "content-type": "application/json; charset=utf-8",
              "content-length": "618",
              "etag": "W/\"26a-oikCrVHYrIW7HG/Iadcri84fygo\"",
              "date": "Fri, 20 Jun 2025 20:25:07 GMT",
              "connection": "close"
            },
            "config": {
              "method": "post",
              "url": "/api/v2/auth/send-email-code",
              "data": "{\"email\":\"Lenore.Fahey@yahoo.com\"}"
            }
          }
        },
        {
          "name": "POST /auth/authenticate - Email auth case insensitivity",
          "status": "failed",
          "duration": 3.253250002861023,
          "retries": 0,
          "error": {
            "name": "ApiError",
            "status": 500,
            "statusText": "Internal Server Error",
            "data": {
              "success": false,
              "error": "emailAuthController.requestCode is not a function",
              "code": "INTERNAL_ERROR",
              "requestId": "req_1750451107421_7g87lenll",
              "stack": "TypeError: emailAuthController.requestCode is not a function\n    at /usr/src/app/src/routes/authRoutesV2.js:103:33\n    at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)\n    at next (/usr/src/app/node_modules/express/lib/router/route.js:149:13)\n    at middleware (/usr/src/app/node_modules/express-validator/lib/middlewares/check.js:16:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
            },
            "headers": {
              "cross-origin-opener-policy": "same-origin",
              "cross-origin-resource-policy": "same-origin",
              "origin-agent-cluster": "?1",
              "referrer-policy": "same-origin",
              "x-content-type-options": "nosniff",
              "x-dns-prefetch-control": "off",
              "x-download-options": "noopen",
              "x-frame-options": "DENY",
              "x-xss-protection": "0",
              "permissions-policy": "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()",
              "cache-control": "no-store, no-cache, must-revalidate, proxy-revalidate",
              "pragma": "no-cache",
              "expires": "0",
              "surrogate-control": "no-store",
              "vary": "Origin",
              "access-control-allow-credentials": "true",
              "access-control-expose-headers": "Content-Length,X-Request-ID,X-Rate-Limit-Remaining",
              "x-request-id": "req_1750451107421_7g87lenll",
              "x-ratelimit-limit": "5000",
              "x-ratelimit-remaining": "4938",
              "x-ratelimit-reset": "2025-06-20T20:39:55.512Z",
              "content-type": "application/json; charset=utf-8",
              "content-length": "618",
              "etag": "W/\"26a-fM8uNB9Xvu+QLz1K0mfz2kaLZ80\"",
              "date": "Fri, 20 Jun 2025 20:25:07 GMT",
              "connection": "close"
            },
            "config": {
              "method": "post",
              "url": "/api/v2/auth/send-email-code",
              "data": "{\"email\":\"helmer_tremblay5@gmail.com\"}"
            }
          }
        },
        {
          "name": "POST /auth/authenticate - Email auth with invalid code",
          "status": "failed",
          "duration": 3.1251660026609898,
          "retries": 0,
          "error": {}
        },
        {
          "name": "POST /auth/authenticate - Google auth with automatic profile",
          "status": "failed",
          "duration": 2.405332997441292,
          "retries": 0,
          "error": {
            "name": "ApiError",
            "status": 500,
            "statusText": "Internal Server Error",
            "data": {
              "success": false,
              "error": "Google authentication not yet implemented"
            },
            "headers": {
              "cross-origin-opener-policy": "same-origin",
              "cross-origin-resource-policy": "same-origin",
              "origin-agent-cluster": "?1",
              "referrer-policy": "same-origin",
              "x-content-type-options": "nosniff",
              "x-dns-prefetch-control": "off",
              "x-download-options": "noopen",
              "x-frame-options": "DENY",
              "x-xss-protection": "0",
              "permissions-policy": "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()",
              "cache-control": "no-store, no-cache, must-revalidate, proxy-revalidate",
              "pragma": "no-cache",
              "expires": "0",
              "surrogate-control": "no-store",
              "vary": "Origin",
              "access-control-allow-credentials": "true",
              "access-control-expose-headers": "Content-Length,X-Request-ID,X-Rate-Limit-Remaining",
              "x-request-id": "req_1750451107427_58n0f25he",
              "x-ratelimit-limit": "5000",
              "x-ratelimit-remaining": "4936",
              "x-ratelimit-reset": "2025-06-20T20:39:55.512Z",
              "content-type": "application/json; charset=utf-8",
              "content-length": "69",
              "etag": "W/\"45-V8gsw74atXNmem5P4DeL6oZAI7E\"",
              "date": "Fri, 20 Jun 2025 20:25:07 GMT",
              "connection": "close"
            },
            "config": {
              "method": "post",
              "url": "/api/v2/auth/authenticate",
              "data": "{\"strategy\":\"google\",\"idToken\":\"mock_google_token\"}"
            }
          }
        },
        {
          "name": "POST /auth/authenticate - Apple auth with automatic profile",
          "status": "failed",
          "duration": 2.6143749989569187,
          "retries": 0,
          "error": {
            "name": "ApiError",
            "status": 500,
            "statusText": "Internal Server Error",
            "data": {
              "success": false,
              "error": "Apple authentication not yet implemented"
            },
            "headers": {
              "cross-origin-opener-policy": "same-origin",
              "cross-origin-resource-policy": "same-origin",
              "origin-agent-cluster": "?1",
              "referrer-policy": "same-origin",
              "x-content-type-options": "nosniff",
              "x-dns-prefetch-control": "off",
              "x-download-options": "noopen",
              "x-frame-options": "DENY",
              "x-xss-protection": "0",
              "permissions-policy": "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()",
              "cache-control": "no-store, no-cache, must-revalidate, proxy-revalidate",
              "pragma": "no-cache",
              "expires": "0",
              "surrogate-control": "no-store",
              "vary": "Origin",
              "access-control-allow-credentials": "true",
              "access-control-expose-headers": "Content-Length,X-Request-ID,X-Rate-Limit-Remaining",
              "x-request-id": "req_1750451107429_7xuiwxaec",
              "x-ratelimit-limit": "5000",
              "x-ratelimit-remaining": "4935",
              "x-ratelimit-reset": "2025-06-20T20:39:55.512Z",
              "content-type": "application/json; charset=utf-8",
              "content-length": "68",
              "etag": "W/\"44-c4Xq7ikBrA++Y1wTaV5V6GEOUGU\"",
              "date": "Fri, 20 Jun 2025 20:25:07 GMT",
              "connection": "close"
            },
            "config": {
              "method": "post",
              "url": "/api/v2/auth/authenticate",
              "data": "{\"strategy\":\"apple\",\"idToken\":\"mock_apple_token\"}"
            }
          }
        },
        {
          "name": "POST /auth/authenticate - Guest auth with automatic profile",
          "status": "failed",
          "duration": 3.197707999497652,
          "retries": 0,
          "error": {
            "name": "ApiError",
            "status": 500,
            "statusText": "Internal Server Error",
            "data": {
              "success": false,
              "error": "Guest authentication not yet implemented"
            },
            "headers": {
              "cross-origin-opener-policy": "same-origin",
              "cross-origin-resource-policy": "same-origin",
              "origin-agent-cluster": "?1",
              "referrer-policy": "same-origin",
              "x-content-type-options": "nosniff",
              "x-dns-prefetch-control": "off",
              "x-download-options": "noopen",
              "x-frame-options": "DENY",
              "x-xss-protection": "0",
              "permissions-policy": "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()",
              "cache-control": "no-store, no-cache, must-revalidate, proxy-revalidate",
              "pragma": "no-cache",
              "expires": "0",
              "surrogate-control": "no-store",
              "vary": "Origin",
              "access-control-allow-credentials": "true",
              "access-control-expose-headers": "Content-Length,X-Request-ID,X-Rate-Limit-Remaining",
              "x-request-id": "req_1750451107433_u6d34l8p3",
              "x-ratelimit-limit": "5000",
              "x-ratelimit-remaining": "4934",
              "x-ratelimit-reset": "2025-06-20T20:39:55.512Z",
              "content-type": "application/json; charset=utf-8",
              "content-length": "68",
              "etag": "W/\"44-bPIRaqeJcEe0RFd8U7+evNpVeOw\"",
              "date": "Fri, 20 Jun 2025 20:25:07 GMT",
              "connection": "close"
            },
            "config": {
              "method": "post",
              "url": "/api/v2/auth/authenticate",
              "data": "{\"strategy\":\"guest\"}"
            }
          }
        },
        {
          "name": "POST /auth/authenticate - Auth with privacy mode selection",
          "status": "passed",
          "duration": 38.50741700083017,
          "retries": 0
        },
        {
          "name": "POST /auth/authenticate - Existing user returns all profiles",
          "status": "failed",
          "duration": 21.28183299675584,
          "retries": 0,
          "error": {
            "name": "ApiError",
            "status": 500,
            "statusText": "Internal Server Error",
            "data": {
              "success": false,
              "error": "\nInvalid `prisma.user.findUnique()` invocation in\n/usr/src/app/src/middleware/auth.ts:59:36\n\n  56 const payload = verifyAccessToken(token);\n  57 \n  58 // Verify user exists (remove device requirement)\n→ 59 const user = await prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   hashedPassword?: StringNullableFilter | String | Null,\n     ?   emailVerified?: BoolFilter | Boolean,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   authStrategies?: StringNullableFilter | String | Null,\n     ?   isGuest?: BoolFilter | Boolean,\n     ?   walletAddress?: StringNullableFilter | String | Null,\n     ?   twoFactorEnabled?: BoolFilter | Boolean,\n     ?   twoFactorSecret?: StringNullableFilter | String | Null,\n     ?   twoFactorBackupCodes?: StringNullableFilter | String | Null,\n     ?   twoFactorEnabledAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   blacklistedTokens?: BlacklistedTokenListRelationFilter,\n     ?   devices?: DeviceRegistrationListRelationFilter,\n     ?   emailVerifications?: EmailVerificationListRelationFilter,\n     ?   linkedAccounts?: LinkedAccountListRelationFilter,\n     ?   refreshTokens?: RefreshTokenListRelationFilter,\n     ?   smartProfiles?: SmartProfileListRelationFilter,\n     ?   socialProfiles?: SocialProfileListRelationFilter,\n     ?   dragOperations?: DragOperationListRelationFilter\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.",
              "code": "INTERNAL_ERROR",
              "requestId": "req_1750451107486_o4h03z4cb",
              "stack": "PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\n/usr/src/app/src/middleware/auth.ts:59:36\n\n  56 const payload = verifyAccessToken(token);\n  57 \n  58 // Verify user exists (remove device requirement)\n→ 59 const user = await prisma.user.findUnique({\n       where: {\n         id: undefined,\n     ?   email?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   hashedPassword?: StringNullableFilter | String | Null,\n     ?   emailVerified?: BoolFilter | Boolean,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   authStrategies?: StringNullableFilter | String | Null,\n     ?   isGuest?: BoolFilter | Boolean,\n     ?   walletAddress?: StringNullableFilter | String | Null,\n     ?   twoFactorEnabled?: BoolFilter | Boolean,\n     ?   twoFactorSecret?: StringNullableFilter | String | Null,\n     ?   twoFactorBackupCodes?: StringNullableFilter | String | Null,\n     ?   twoFactorEnabledAt?: DateTimeNullableFilter | DateTime | Null,\n     ?   blacklistedTokens?: BlacklistedTokenListRelationFilter,\n     ?   devices?: DeviceRegistrationListRelationFilter,\n     ?   emailVerifications?: EmailVerificationListRelationFilter,\n     ?   linkedAccounts?: LinkedAccountListRelationFilter,\n     ?   refreshTokens?: RefreshTokenListRelationFilter,\n     ?   smartProfiles?: SmartProfileListRelationFilter,\n     ?   socialProfiles?: SocialProfileListRelationFilter,\n     ?   dragOperations?: DragOperationListRelationFilter\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.\n    at kn (/usr/src/app/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at Zn.handleRequestError (/usr/src/app/node_modules/@prisma/client/runtime/library.js:121:7102)\n    at Zn.handleAndLogRequestError (/usr/src/app/node_modules/@prisma/client/runtime/library.js:121:6784)\n    at Zn.request (/usr/src/app/node_modules/@prisma/client/runtime/library.js:121:6491)\n    at async l (/usr/src/app/node_modules/@prisma/client/runtime/library.js:130:9778)\n    at async authenticate (/usr/src/app/src/middleware/auth.ts:59:18)"
            },
            "headers": {
              "cross-origin-opener-policy": "same-origin",
              "cross-origin-resource-policy": "same-origin",
              "origin-agent-cluster": "?1",
              "referrer-policy": "same-origin",
              "x-content-type-options": "nosniff",
              "x-dns-prefetch-control": "off",
              "x-download-options": "noopen",
              "x-frame-options": "DENY",
              "x-xss-protection": "0",
              "permissions-policy": "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()",
              "cache-control": "no-store, no-cache, must-revalidate, proxy-revalidate",
              "pragma": "no-cache",
              "expires": "0",
              "surrogate-control": "no-store",
              "vary": "Origin",
              "access-control-allow-credentials": "true",
              "access-control-expose-headers": "Content-Length,X-Request-ID,X-Rate-Limit-Remaining",
              "x-request-id": "req_1750451107486_o4h03z4cb",
              "x-ratelimit-limit": "5000",
              "x-ratelimit-remaining": "4925",
              "x-ratelimit-reset": "2025-06-20T20:39:55.512Z",
              "content-type": "application/json; charset=utf-8",
              "content-length": "4161",
              "etag": "W/\"1041-WKJdsUA+BNkxxq4MfjlzBGZoRGU\"",
              "date": "Fri, 20 Jun 2025 20:25:07 GMT",
              "connection": "close"
            },
            "config": {
              "method": "post",
              "url": "/api/v1/profiles",
              "data": "{\"name\":\"Trading Profile\"}"
            }
          }
        },
        {
          "name": "Authentication rate limiting",
          "status": "failed",
          "duration": 32.73487500101328,
          "retries": 0,
          "error": {}
        },
        {
          "name": "POST /auth/refresh - Token refresh with accountId",
          "status": "passed",
          "duration": 18.331749998033047,
          "retries": 0
        },
        {
          "name": "Complete V2 authentication flow test",
          "status": "failed",
          "duration": 11.359249997884035,
          "retries": 0,
          "error": {}
        },
        {
          "name": "POST /auth/authenticate - Invalid strategy",
          "status": "failed",
          "duration": 2.1355840004980564,
          "retries": 0,
          "error": {}
        },
        {
          "name": "POST /auth/authenticate - Missing required fields",
          "status": "passed",
          "duration": 3.0185410007834435,
          "retries": 0
        }
      ],
      "startTime": 1750451107164,
      "duration": 399,
      "passed": 6,
      "failed": 13,
      "skipped": 0
    }
  ],
  "metrics": {
    "avgResponseTime": 0,
    "p50ResponseTime": 0,
    "p95ResponseTime": 0,
    "p99ResponseTime": 0,
    "slowestEndpoints": [],
    "requestsPerSecond": 0,
    "errorRate": 0
  },
  "security": {
    "vulnerabilities": [],
    "passedChecks": [],
    "failedChecks": [],
    "riskScore": 0,
    "compliance": {
      "owasp": true,
      "pci": true,
      "gdpr": true,
      "details": []
    }
  },
  "recommendations": [
    "High test failure rate (>10%) - review test stability and application bugs"
  ],
  "generatedAt": "2025-06-20T20:25:07.563Z"
}