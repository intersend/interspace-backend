# Cloud Build configuration for deploying Redis (Google Memorystore)
steps:
# Create or update Memorystore Redis instance for development
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'deploy-redis-dev'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Check if Redis instance exists
      if gcloud redis instances describe interspace-redis-dev --region=${_REGION} 2>/dev/null; then
        echo "Redis instance already exists, skipping creation"
      else
        echo "Creating Redis instance..."
        gcloud redis instances create interspace-redis-dev \
          --region=${_REGION} \
          --tier=basic \
          --size=1 \
          --redis-version=redis_6_x \
          --display-name="Interspace Redis Dev" \
          --network=projects/$PROJECT_ID/global/networks/default \
          --redis-config maxmemory-policy=allkeys-lru \
          --maintenance-window-day=sunday \
          --maintenance-window-hour=3 \
          --maintenance-window-duration=1
      fi

# Create or update Memorystore Redis instance for production
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'deploy-redis-prod'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Check if Redis instance exists
      if gcloud redis instances describe interspace-redis-prod --region=${_REGION} 2>/dev/null; then
        echo "Redis instance already exists, checking for updates..."
        # Update Redis configuration if needed
        gcloud redis instances update interspace-redis-prod \
          --region=${_REGION} \
          --update-redis-config maxmemory-policy=allkeys-lru \
          --display-name="Interspace Redis Production"
      else
        echo "Creating Redis instance..."
        gcloud redis instances create interspace-redis-prod \
          --region=${_REGION} \
          --tier=standard-ha \
          --size=5 \
          --redis-version=redis_6_x \
          --replica-count=1 \
          --read-replicas-mode=read-replicas-enabled \
          --display-name="Interspace Redis Production" \
          --network=projects/$PROJECT_ID/global/networks/default \
          --redis-config maxmemory-policy=allkeys-lru \
          --maintenance-window-day=sunday \
          --maintenance-window-hour=3 \
          --maintenance-window-duration=1 \
          --enable-auth
      fi

# Get Redis connection details and store in Secret Manager
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'store-redis-urls'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Get development Redis details
      DEV_HOST=$(gcloud redis instances describe interspace-redis-dev --region=${_REGION} --format="value(host)")
      DEV_PORT=$(gcloud redis instances describe interspace-redis-dev --region=${_REGION} --format="value(port)")
      DEV_AUTH=$(gcloud redis instances describe interspace-redis-dev --region=${_REGION} --format="value(authString)")
      
      # Construct development Redis URL
      if [ -z "$DEV_AUTH" ]; then
        DEV_REDIS_URL="redis://$DEV_HOST:$DEV_PORT/0"
      else
        DEV_REDIS_URL="redis://:$DEV_AUTH@$DEV_HOST:$DEV_PORT/0"
      fi
      
      # Store in Secret Manager
      echo -n "$DEV_REDIS_URL" | gcloud secrets create interspace-dev-redis-url --data-file=- 2>/dev/null || \
      echo -n "$DEV_REDIS_URL" | gcloud secrets versions add interspace-dev-redis-url --data-file=-
      
      # Get production Redis details
      PROD_HOST=$(gcloud redis instances describe interspace-redis-prod --region=${_REGION} --format="value(host)")
      PROD_PORT=$(gcloud redis instances describe interspace-redis-prod --region=${_REGION} --format="value(port)")
      PROD_AUTH=$(gcloud redis instances describe interspace-redis-prod --region=${_REGION} --format="value(authString)")
      
      # Construct production Redis URL
      if [ -z "$PROD_AUTH" ]; then
        PROD_REDIS_URL="redis://$PROD_HOST:$PROD_PORT/0"
      else
        PROD_REDIS_URL="redis://:$PROD_AUTH@$PROD_HOST:$PROD_PORT/0"
      fi
      
      # Store in Secret Manager
      echo -n "$PROD_REDIS_URL" | gcloud secrets create interspace-prod-redis-url --data-file=- 2>/dev/null || \
      echo -n "$PROD_REDIS_URL" | gcloud secrets versions add interspace-prod-redis-url --data-file=-

substitutions:
  _REGION: 'us-central1'

options:
  logging: CLOUD_LOGGING_ONLY

timeout: '1800s'