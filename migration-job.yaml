apiVersion: run.googleapis.com/v1
kind: Job
metadata:
  name: interspace-db-migrate-dev
  annotations:
    run.googleapis.com/launch-stage: BETA
spec:
  template:
    metadata:
      annotations:
        run.googleapis.com/execution-environment: gen2
        run.googleapis.com/cloudsql-instances: intersend:us-central1:interspace-db-dev
        run.googleapis.com/vpc-access-connector: projects/intersend/locations/us-central1/connectors/interspace-connector
        run.googleapis.com/vpc-access-egress: private-ranges-only
    spec:
      parallelism: 1
      taskCount: 1
      taskTimeout: 600s
      serviceAccountName: interspace-backend-dev@intersend.iam.gserviceaccount.com
      template:
        spec:
          containers:
          - image: gcr.io/intersend/interspace-backend:latest
            name: migrate
            command:
            - /bin/sh
            - -c
            - |
              echo "Starting database migration..."
              
              # Wait for database to be ready
              echo "Checking database connection..."
              npx prisma db execute --file /dev/stdin <<EOF
              SELECT 1;
              EOF
              
              if [ $? -ne 0 ]; then
                echo "Database connection failed"
                exit 1
              fi
              
              echo "Database connection successful"
              
              # Run migrations
              echo "Running Prisma migrations..."
              npx prisma migrate deploy
              
              if [ $? -eq 0 ]; then
                echo "Migrations completed successfully"
              else
                echo "Migration failed"
                exit 1
              fi
              
              # Verify tables exist
              echo "Verifying tables..."
              npx prisma db execute --file /dev/stdin <<EOF
              SELECT table_name FROM information_schema.tables 
              WHERE table_schema = 'public' 
              AND table_name IN ('siwe_nonces', 'blacklisted_tokens', 'users', 'accounts')
              ORDER BY table_name;
              EOF
              
              echo "Migration job completed"
            env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-url
                  key: latest
            - name: NODE_ENV
              value: development
            resources:
              limits:
                cpu: "1"
                memory: "1Gi"