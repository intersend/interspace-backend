steps:
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  id: 'build'
  args: 
    - 'build'
    - '-t'
    - 'gcr.io/$PROJECT_ID/interspace-backend:$COMMIT_SHA'
    - '-t'
    - 'gcr.io/$PROJECT_ID/interspace-backend:latest'
    - '.'

# Push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  id: 'push'
  args: 
    - 'push'
    - '--all-tags'
    - 'gcr.io/$PROJECT_ID/interspace-backend'
  waitFor: ['build']

# Run database migrations
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'update-migration-job'
  entrypoint: gcloud
  args:
    - 'run'
    - 'jobs'
    - 'update'
    - 'interspace-db-migrate-dev'
    - '--image'
    - 'gcr.io/$PROJECT_ID/interspace-backend:$COMMIT_SHA'
    - '--region'
    - 'us-central1'
  waitFor: ['push']

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'run-migrations'
  entrypoint: gcloud
  args:
    - 'run'
    - 'jobs'
    - 'execute'
    - 'interspace-db-migrate-dev'
    - '--region'
    - 'us-central1'
    - '--wait'
  waitFor: ['update-migration-job']

# Deploy to Cloud Run service
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'deploy'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'interspace-backend-dev'
    - '--image'
    - 'gcr.io/$PROJECT_ID/interspace-backend:$COMMIT_SHA'
    - '--platform'
    - 'managed'
    - '--region'
    - 'us-central1'
    - '--no-traffic'
  waitFor: ['run-migrations']

# Route traffic to new revision after successful migration
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'route-traffic'
  entrypoint: gcloud
  args:
    - 'run'
    - 'services'
    - 'update-traffic'
    - 'interspace-backend-dev'
    - '--to-latest'
    - '--platform'
    - 'managed'
    - '--region'
    - 'us-central1'
  waitFor: ['deploy']

options:
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'
  logging: CLOUD_LOGGING_ONLY

timeout: '1200s'